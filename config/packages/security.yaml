security:

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        bcrypt_algorithm:
            algorithm: 'bcrypt'
            cost: 13

    providers:
        email_provider:
            entity:
                class: 'App\Entity\User'
                property: 'email'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            json_login:
                check_path: app_login
            access_token:
                token_handler : App\Security\JwtAccessHandler
                failure_handler: App\Security\JwtAccessFailureHandler
            stateless: true

    access_control:
        - { path: '^/user/register', roles: PUBLIC_ACCESS}
        - { path: '^/public_key', roles: PUBLIC_ACCESS}
        - { path: '^/movie/all', roles: PUBLIC_ACCESS}
        - { path: '^/login', roles: PUBLIC_ACCESS}
        - { path: '^/', roles: IS_AUTHENTICATED_FULLY}

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
